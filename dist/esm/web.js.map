{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,aAAc,SAAQ,SAAS;IAC1C,aAAa;IACb,KAAK,CAAC,QAAQ,CAAC,OAAyB,EAAE,QAAgC;QACxE,MAAM,6CAA6C,CAAC;IACtD,CAAC;IAED,aAAa;IACb,KAAK,CAAC,SAAS,CAAC,OAA0B;QACxC,MAAM,6CAA6C,CAAC;IACtD,CAAC;IAED,aAAa;IACb,KAAK,CAAC,cAAc,CAAC,OAA+B;QAClD,MAAM,6CAA6C,CAAC;IACtD,CAAC;IAED,aAAa;IACb,KAAK,CAAC,WAAW,CAAC,OAA8B;QAC9C,MAAM,6CAA6C,CAAC;IACtD,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { CallbackID, IClosePortOptions, IGetSerialPortsOptions, IOpenPortOptions, IWriteToSerialOptions, SerialPortPlugin, SerialPortReadCallback } from './definitions';\n\nexport class SerialPortWeb extends WebPlugin implements SerialPortPlugin {\n  // @ts-ignore\n  async OpenPort(options: IOpenPortOptions, callback: SerialPortReadCallback): Promise<CallbackID> {\n    throw 'serial port plugin is not supported for web';\n  }\n\n  // @ts-ignore\n  async ClosePort(options: IClosePortOptions): Promise<void> {\n    throw 'serial port plugin is not supported for web';\n  }\n\n  // @ts-ignore\n  async GetSerialPorts(options: IGetSerialPortsOptions): Promise<void> {\n    throw 'serial port plugin is not supported for web';\n  }\n\n  // @ts-ignore\n  async WriteToPort(options: IWriteToSerialOptions): Promise<void> {\n    throw 'serial port plugin is not supported for web';\n  }\n}\n"]}